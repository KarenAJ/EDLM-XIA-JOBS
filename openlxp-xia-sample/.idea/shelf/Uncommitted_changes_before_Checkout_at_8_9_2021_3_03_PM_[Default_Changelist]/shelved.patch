Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: \"3\"\n\nservices:\n  db_xia_dau:\n    image: mysql:5.7\n    ports:\n      - '3306:3306'\n#    volumes:\n#      - mysql_data:/var/lib/mysql\n    environment:\n      MYSQL_DATABASE: \"${DB_NAME}\"\n#      MYSQL_USER: 'root'\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n      MYSQL_ROOT_PASSWORD: \"${DB_ROOT_PASSWORD}\"\n      MYSQL_HOST: ''\n    networks:\n      - openlxp\n\n  app_xia_dau:\n    build:\n      context: .\n    ports:\n      - \"8000:8020\"\n    command: >\n      sh -c \". /opt/app/start-app.sh\"\n    environment:\n      DB_NAME: \"${DB_NAME}\"\n      DB_USER: \"${DB_USER}\"\n      DB_PASSWORD: \"${DB_PASSWORD}\"\n      DB_HOST: \"${DB_HOST}\"\n      DJANGO_SUPERUSER_USERNAME: \"${DJANGO_SUPERUSER_USERNAME}\"\n      DJANGO_SUPERUSER_PASSWORD: \"${DJANGO_SUPERUSER_PASSWORD}\"\n      DJANGO_SUPERUSER_EMAIL: \"${DJANGO_SUPERUSER_EMAIL}\"\n      BUCKET_NAME: \"${BUCKET_NAME}\"\n      AWS_ACCESS_KEY_ID: \"${AWS_ACCESS_KEY_ID}\"\n      AWS_SECRET_ACCESS_KEY: \"${AWS_SECRET_ACCESS_KEY}\"\n      AWS_DEFAULT_REGION: \"${AWS_DEFAULT_REGION}\"\n      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n      SECRET_KEY_VAL: \"${SECRET_KEY_VAL}\"\n    volumes:\n      - ./app:/opt/app/openlxp-xia-dau\n    depends_on:\n      - db_xia_dau\n    networks:\n      - openlxp\n\n  redis:\n    image: redis:alpine\n    networks:\n      - openlxp\n\n  celery:\n    build:\n      context: .\n    command: celery -A openlxp_xia_dau_project worker -l info\n    volumes:\n      - ./app:/opt/app/openlxp-xia-dau\n    environment:\n      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n    env_file:\n      - ./.env\n    depends_on:\n      - db_xia_dau\n      - redis\n      - app_xia_dau\n    networks:\n      - openlxp\n    restart: on-failure\n\n  celery-beat:\n    build:\n      context: .\n    command: celery -A openlxp_xia_dau_project beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler\n    volumes:\n      - ./app:/opt/app/openlxp-xia-dau\n    environment:\n      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'\n    env_file:\n      - ./.env\n    depends_on:\n      - db_xia_dau\n      - redis\n      - app_xia_dau\n    networks:\n      - openlxp\n    restart: on-failure\n\nnetworks:\n  openlxp:\n    external: true\n\nvolumes:\n  mysql_data:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yml b/docker-compose.yml
--- a/docker-compose.yml	(revision 7f0e65f0ce2b6cb190732e6ceee3cff743bf4c6b)
+++ b/docker-compose.yml	(date 1624999325071)
@@ -40,6 +40,7 @@
       SECRET_KEY_VAL: "${SECRET_KEY_VAL}"
     volumes:
       - ./app:/opt/app/openlxp-xia-dau
+      - C:/Users/kjijo/Documents/dockerRun/cacert.pem:/etc/ssl/certs/ca-certificates.pem
     depends_on:
       - db_xia_dau
     networks:
@@ -56,6 +57,7 @@
     command: celery -A openlxp_xia_dau_project worker -l info
     volumes:
       - ./app:/opt/app/openlxp-xia-dau
+      - C:/Users/kjijo/Documents/dockerRun/cacert.pem:/etc/ssl/certs/ca-certificates.pem
     environment:
       REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
       AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
Index: app/openlxp_xia_dau_project/celery.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\n\nfrom celery import Celery\nfrom celery.schedules import crontab\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE',\n                      'openlxp_xia_dau_project.settings')\n\napp = Celery('openlxp_xia_dau_project')\napp.config_from_object('django.conf:settings', namespace='CELERY')\napp.autodiscover_tasks()\n\n# Hardcoded scheduler using cron\n\n# app.conf.beat_schedule = {\n#     'add-every-3-minute-contrab': {\n#         'task': 'workflow_for_xia',\n#         'schedule': crontab(minute='*/3'),\n#         # 'args': (16, 16),\n# }\n\n\n@app.task(bind=True)\ndef debug_task(self):\n    print('Request: {0!r}'.format(self.request))\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/openlxp_xia_dau_project/celery.py b/app/openlxp_xia_dau_project/celery.py
--- a/app/openlxp_xia_dau_project/celery.py	(revision 7f0e65f0ce2b6cb190732e6ceee3cff743bf4c6b)
+++ b/app/openlxp_xia_dau_project/celery.py	(date 1625072631370)
@@ -10,6 +10,7 @@
 app.config_from_object('django.conf:settings', namespace='CELERY')
 app.autodiscover_tasks()
 
+
 # Hardcoded scheduler using cron
 
 # app.conf.beat_schedule = {
@@ -19,7 +20,6 @@
 #         # 'args': (16, 16),
 # }
 
-
 @app.task(bind=True)
 def debug_task(self):
     print('Request: {0!r}'.format(self.request))
